DEBUGGING                                                         
Play with ajax requests (Firefox only?):                     |Console, Advanced tricks (Chrome only?):
 Go to inspector -> network tab -> RightClick on request     |    Display object as tables in the console:
  -> choose Edit and Resend: Now you can change anything     |      console.table(animals);
  you want: header, params, ... and resend.                  |
                                                             |    Dump stack trace for a function:
keyword "debugger" will pause in code                        |      console.trace('trace car');
just when console is open and the code runs "over" debugger  |
                                                             |    Quick find a function to debug:
dump object to string:                                       |      debug(car.functY)   Chrome only?
   JSON.stringify(window.document)                           |      (not the same that console.debug)
                                                             |
Print function calling function:                             |    monitor(funct1); Every time the function is 
   arguments.callee.caller.toString()                        |      called it will be logged with the values 
                                                             |      that was passed in
-------------------------------------------------------------+--------------------
BLACK BLOCK SCRIPT DURING DEBUGGING: 
CHROME:                                                      FIREFOX:
– Alt 1. inspector -> source -> Right click                  Inspector -> Debugger -> Mark scriptto black list ->
  the file to black list and choose black box script.        Click on the eye in the very bottom left corner.
– Alt 2. Open up settings view -> Click                      https://hacks.mozilla.org/2013/08/
  "manage framework black boxing" -> write a regexp in          new-features-of-firefox-developer-tools-episode-25/ 
  popup to blackbox, for example, the entire vendor folder.
  https://developer.chrome.com/devtools/docs/blackboxing
----------------------------------------------------------------------------------
DOM-INSPECTING:
Quickly access elements in the console:
  $(‘css-selector’)  returns first match of CSS selector
  $$(‘css-selector’) returns all matches 
----------------------------------------------------------------------------------
SOURCE MAPPING:
http://blog.getsentry.com/2015/10/29/debuggable-javascript-with-source-maps.html
source maps are JavaScript’s version of debug symbols: Include with:
//# sourceMappingURL=/path/to/app.min.js.map

modern JavaScript transpilers (TypeScript,...) has a command-line option for generating the associated source map. 

   source map example:
   {
     version : 3,  // version of source map spec (should be 3)
     file: "app.min.js", // generated filename associated to
     sourceRoot : "",    // all sources are relative to it (opt)
     sources: ["foo.js", "bar.js"], // URLs to original  files
     names: ["src", "maps", "are"], // variable/method names found in your code
     mappings: "AAgBC,SAAQ,CAAEA"   // base64Enc VLQ values source code mappings
   }


EXTERNAL TOOLING
--------------------------------------------------------------------------------------------------------------
Robots for UI testing Automation:                      | Fiddler. HTTP proxy debugger. 
http://docs.seleniumhq.org/ automate web applications. | Allows to replace remote html/css/... with local one.
                                                       | http://www.youtube.com/watch?v=TP_5JYatlNQ
